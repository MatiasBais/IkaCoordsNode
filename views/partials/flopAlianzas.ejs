<h1>Peores Alianzas</h1>
<form id="pointIncreaseForm">
    <label for="startDate">Desde:</label>
    <select id="startDate" name="startDate"></select>
    
    <label for="endDate">Hasta:</label>
    <select id="endDate" name="endDate"></select>

    <label for="clasificacion">Clasificacion:</label>
    <select id="clasificacion" name="clasificacion">
        <option value="Totales">Totales</option>
        <option value="Constructor">Maestro Constructor</option>
        <option value="NivelConstruccion">Nivel de Construccion</option>
        <option value="Investigadores">Investigadores</option>
        <option value="NivelInvestigadores">Nivel de Investigacion</option>
        <option value="Generales">Generales</option>
        <option value="Oro">Oro</option>
        <option value="Donacion">Donacion</option>
    </select>

    <label for="pagina">Ranking:</label>
    <select id="pagina" name="pagina">
        <option value="0">1-50</option>
        <option value="50">51-100</option>
        <option value="100">101-150</option>
        <option value="150">151-200</option>
        <option value="200">201-250</option>
        <option value="250">251-300</option>
        <option value="300">301-350</option>
        <option value="350">351-400</option>
        <option value="400">401-450</option>
        <option value="450">451-500</option>
        <option value="500">501-550</option>
        <option value="550">551-600</option>
        <option value="600">601-650</option>
        <option value="650">651-700</option>
        <option value="700">701-750</option>
        <option value="750">751-800</option>
        <option value="800">801-850</option>
        <option value="850">851-900</option>
        <option value="900">901-950</option>
        <option value="950">951-1000</option>
    </select>

    <button type="button" onclick="calculateRanking()">Mostrar</button>
</form>

<div id="resultContainer"></div>
<script>

async function populateDates() {
        try {
            
            const server = document.getElementById('server').value;

            // Fetch dates from your backend API with the server parameter
            const response = await fetch(`/api/fetch-dates?server=${server}`);
            const dates = await response.json();


            // Populate start date select
            const startDateSelect = document.getElementById('startDate');
            dates.forEach(date => {
                const option = document.createElement('option');
                option.value = date.numero;
                option.text = date.fecha; // Assuming 'fecha' is the field containing the date
                startDateSelect.appendChild(option);
            });

            // Populate end date select
            const endDateSelect = document.getElementById('endDate');
        dates.forEach((date, index) => {
            const option = new Option(date.fecha, date.numero);
            endDateSelect.add(option);
            // Set last date as selected
            if (index === dates.length - 1) {
                endDateSelect.value = date.numero;
            }
        });
        } catch (error) {
            console.error('Error fetching dates:', error);
        }
    }

    // Call the function to populate dates when the page loads
    document.addEventListener('DOMContentLoaded', () => {
        populateDates();
    });




    async function calculateRanking() {
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const server = document.getElementById('server').value;
    const pagina = document.getElementById('pagina').value;
    const clasificacion = document.getElementById('clasificacion').value;
    const apiUrl = '/api/point-increase-ranking-alliances';
    const queryParams = new URLSearchParams({
        startDate: startDate,
        endDate: endDate,
        server: server,
        clasificacion: clasificacion,
        pagina: pagina,
        order: 1
    });

    const url = `${apiUrl}?${queryParams.toString()}`;

    try {
        const response = await fetch(url);
        const rankingData = await response.json();

        displayRanking(rankingData, server);
    } catch (error) {
        console.error('Error fetching point increase ranking:', error);
    }
}

function displayRanking(rankingData, server) {
    const resultContainer = document.getElementById('resultContainer');
    resultContainer.innerHTML = '';

    if (rankingData.length === 0) {
        resultContainer.innerHTML = '<p>No alliances found.</p>';
        return;
    }

    const table = document.createElement('table');
    table.innerHTML = `
        <tr>
            <th>Nombre</th>
            <th>Puntos</th>
            <th>Diferencia</th>
        </tr>
    `;

    rankingData.forEach(alianza => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${alianza?'<a href="/alianza/'+server+'/'+alianza.idalianza+'">'+alianza.nombre + "</a>":'-'}</td>
            <td>${(+alianza.bPuntos).toLocaleString("en-US")}</td>
            <td>${(alianza.bPuntos-alianza.aPuntos).toLocaleString("en-US")}</td>
        `;
        table.appendChild(row);
    });

    resultContainer.appendChild(table);
}

</script>